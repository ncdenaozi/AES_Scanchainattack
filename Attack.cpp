#include "Attack.h"

using namespace std;

string Attack::ScanChainOut(){
    //implementation
}

void Attack::DetermineScanChainStructure(){
    //implementation
}

void Attack::RecoverRoundKey(){
    //implementation
}

void Attack::PrintResult(){
    //implementation
} 

int main(){
    vector<unsigned char> plain = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff }; //plaintext example
    //vector<unsigned char> key = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f }; //key example
    vector<unsigned char> key ={0x2b,0x7e,0x15,0x16,0x28,0xae,0xd2,0xa6,0xab,0xf7,0x15,0x88,0x09,0xcf,0x4f,0x3c};
    //vector<unsigned char> key ={0x3c,0x4f,0xcf,0x09,0x88,0x15,0xf7,0xab,0xa6,0xd2,0xae,0x28,0x16,0x15,0x7e,0x2b};
    
    Attack attk(AESKeyLength::AES_128);
    vector<unsigned char> d =attk.EncryptECB(plain, key);

    for(auto i:d)
        cout<<hex<<(int)i;
    cout<<endl;

    return 1;
}